{"version":3,"sources":["webpack://@flarumite/profanity/webpack/bootstrap","webpack://@flarumite/profanity/external \"flarum.core.compat['Model']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Button']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['Component']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['utils/mixin']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['extend']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/AdminNav']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Page']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Placeholder']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Checkbox']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Modal']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['utils/string']\"","webpack://@flarumite/profanity/external \"flarum.core.compat['components/Switch']\"","webpack://@flarumite/profanity/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarumite/profanity/./src/common/models/Profanity.js","webpack://@flarumite/profanity/./src/admin/components/EditProfanityModal.js","webpack://@flarumite/profanity/./src/admin/components/ProfanitiesListItem.js","webpack://@flarumite/profanity/./src/admin/components/ProfanitiesList.js","webpack://@flarumite/profanity/./src/admin/components/ProfanitiesHeader.js","webpack://@flarumite/profanity/./src/admin/components/ProfanitiesPage.js","webpack://@flarumite/profanity/./src/admin/addPagesPane.js","webpack://@flarumite/profanity/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Profanity","mixin","Model","type","attribute","regex","replacement","flag","event","time","transformDate","editTime","EditPageModal","init","this","profanity","props","app","store","createRecord","prop","className","title","translator","trans","content","placeholder","oninput","e","target","checked","onclick","withAttr","Button","component","loading","children","exists","onsubmit","preventDefault","save","errorHandler","onerror","then","hide","redraw","onhide","route","confirm","Modal","ProfanitiesListItem","view","data","id","attributes","Checkbox","state","onchange","updateFlag","icon","modal","show","EditProfanityModal","Component","ProfanitiesList","profanities","page","refresh","LoadingIndicator","length","text","Placeholder","map","clear","loadResults","parseResults","find","results","push","apply","lazyRedraw","loadNext","loadPrev","ProfanitiesHeader","ProfanitiesPage","Page","routes","path","extensionSettings","extend","AdminNav","items","add","AdminLinkButton","href","description","initializers","models","ProfanityRow","addPagesPane"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAc,O,cCA3CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAkB,W,cCA/CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAe,Q,cCA5CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,+B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,6BCArB,SAASC,EAAeC,EAAUC,GAC/CD,EAASR,UAAYlB,OAAOY,OAAOe,EAAWT,WAC9CQ,EAASR,UAAUU,YAAcF,EACjCA,EAASG,UAAYF,E,2CCCFG,G,qFAAkBC,IAAMC,IAAO,CAChDC,KAAMD,IAAME,UAAU,QACtBrC,KAAMmC,IAAME,UAAU,QACtBC,MAAOH,IAAME,UAAU,SACvBE,YAAaJ,IAAME,UAAU,eAC7BG,KAAML,IAAME,UAAU,QACtBI,MAAON,IAAME,UAAU,SACvBK,KAAMP,IAAME,UAAU,OAAQF,IAAMQ,eACpCC,SAAUT,IAAME,UAAU,WAAYF,IAAMQ,mB,yJCJ3BE,G,sGACnBC,KAAA,WACE,YAAMA,KAAN,WAEAC,KAAKC,UAAYD,KAAKE,MAAMD,WAAaE,IAAIC,MAAMC,aAAa,eAEhEL,KAAKT,MAAQzC,EAAEwD,KAAKN,KAAKC,UAAUV,SAAW,IAC9CS,KAAK/C,KAAOH,EAAEwD,KAAKN,KAAKC,UAAUhD,QAAU,IAC5C+C,KAAKR,YAAc1C,EAAEwD,KAAKN,KAAKC,UAAUT,eAAiB,IAC1DQ,KAAKP,KAAO3C,EAAEwD,KAAKN,KAAKC,UAAUR,QAAU,IAC5CO,KAAKN,MAAQ5C,EAAEwD,KAAKN,KAAKC,UAAUP,SAAW,K,EAGhDa,UAAA,WACE,MAAO,oC,EAGTC,MAAA,WACE,OAAOL,IAAIM,WAAWC,MAAM,6D,EAG9BC,QAAA,WAAU,WACR,OACE,SAAKJ,UAAU,cACb,SAAKA,UAAU,QAEb,SAAKA,UAAU,cACb,eAAQJ,IAAIM,WAAWC,MAAM,iEAC3B,WACEH,UAAU,cACVK,YAAY,GACZjD,MAAOqC,KAAK/C,OACZ4D,QAAS,SAAAC,GACP,EAAK7D,KAAK6D,EAAEC,OAAOpD,WAIxBwC,IAAIM,WAAWC,MAAM,iEAExB,SAAKH,UAAU,cACb,eAAQJ,IAAIM,WAAWC,MAAM,kEAC3B,WACEH,UAAU,cACVK,YAAY,GACZjD,MAAOqC,KAAKT,QACZsB,QAAS,SAAAC,GACP,EAAKvB,MAAMuB,EAAEC,OAAOpD,WAIzBwC,IAAIM,WAAWC,MAAM,kEAGxB,SAAKH,UAAU,cACb,eAAQJ,IAAIM,WAAWC,MAAM,wEAC3B,WACEH,UAAU,cACVK,YAAY,GACZjD,MAAOqC,KAAKR,cACZqB,QAAS,SAAAC,GACP,EAAKtB,YAAYsB,EAAEC,OAAOpD,WAI/BwC,IAAIM,WAAWC,MAAM,wEAGxB,SAAKH,UAAU,cACb,eAAQJ,IAAIM,WAAWC,MAAM,kEAC7B,WACErB,KAAK,WACL2B,QAAShB,KAAKP,OACdwB,QAAS,SAAAH,GACP,EAAKrB,KAAKqB,EAAEC,OAAOC,YAGvB,WAAIb,IAAIM,WAAWC,MAAM,kEAG3B,SAAKH,UAAU,cACb,eAAQJ,IAAIM,WAAWC,MAAM,sEAC3B,YAAQH,UAAU,cAEhBM,QAAS/D,EAAEoE,SAAS,QAASlB,KAAKN,OAClC/B,MAAOqC,KAAKN,SAEZ,YAAQ/B,MAAM,QAAQwC,IAAIM,WAAWC,MAAM,mEAC3C,YAAQ/C,MAAM,QAAQwC,IAAIM,WAAWC,MAAM,qEAI9CP,IAAIM,WAAWC,MAAM,sEAGxB,SAAKH,UAAU,cACZY,IAAOC,UAAU,CAChB/B,KAAM,SACNkB,UAAW,iDACXc,QAASrB,KAAKqB,QACdC,SAAUnB,IAAIM,WAAWC,MAAM,sEAEhCV,KAAKC,UAAUsB,OACd,YAAQlC,KAAK,SAASkB,UAAU,mCAC9BU,QAASjB,KAAA,OAAY9B,KAAK8B,OACzBG,IAAIM,WAAWC,MAAM,qEAGtB,O,EAQdc,SAAA,SAASV,GAAG,WACVA,EAAEW,iBAEFzB,KAAKqB,SAAU,EAEfrB,KAAKC,UAAUyB,KACb,CACEzE,KAAM+C,KAAK/C,OACXsC,MAAOS,KAAKT,QACZG,MAAOM,KAAKN,QACZD,KAAMO,KAAKP,OACXD,YAAaQ,KAAKR,cAClBH,KAAM,aAER,CAAEsC,aAAc3B,KAAK4B,QAAQ1D,KAAK8B,QAEjC6B,KAAK7B,KAAK8B,KAAK5D,KAAK8B,OAXvB,OAYS,WACL,EAAKqB,SAAU,EACfvE,EAAEiF,a,EAIRC,OAAA,WACElF,EAAEmF,MAAM9B,IAAI8B,MAAM,iB,SAGpB,WAEIC,QACE/B,IAAIM,WAAWC,MAAM,4EAEvBV,KAAKC,UAAL,SAAwB4B,MAAK,kBAAM/E,EAAEiF,YACrC/B,KAAK8B,S,GApJgCK,MCHtBC,E,gGAEjBC,KAAA,WACI,IAAMpC,EAAYD,KAAKE,MAAMD,UAC7B,OAEI,QAAIhC,IAAKgC,EAAUqC,KAAKC,IACpB,YAAKtC,EAAUqC,KAAKE,WAAWvF,MAC/B,YAAKgD,EAAUqC,KAAKE,WAAWjD,OAC/B,YAAKU,EAAUqC,KAAKE,WAAWhD,aAC/B,YAAKiD,IAASrB,UAAU,CACpBsB,MAAOzC,EAAUqC,KAAKE,WAAW/C,KACjCkD,SAAU3C,KAAK4C,WAAW1E,KAAK8B,SAEnC,QAAIO,UAAU,uBAEV,SAAKA,UAAU,eACVY,IAAOC,UAAU,CACdb,UAAW,kCACXsC,KAAM,oBACN5B,QAAS,kBAAMd,IAAI2C,MAAMC,KAAK,IAAIC,EAAmB,CAAE/C,kBAG1DkB,IAAOC,UAAU,CACdb,UAAW,mDACXsC,KAAM,eACN5B,QAASjB,KAAA,OAAY9B,KAAK8B,Y,EASlD4C,WAAA,WACI5C,KAAKE,MAAMD,UAAUyB,KAAK,CACtBzE,KAAM+C,KAAKE,MAAMD,UAAUqC,KAAKE,WAAWvF,KAC3CwC,KAAOO,KAAKE,MAAMD,UAAUqC,KAAKE,WAAW/C,KAAO,EAAI,EACvDF,MAAOS,KAAKE,MAAMD,UAAUqC,KAAKE,WAAWjD,MAC5CG,MAAOM,KAAKE,MAAMD,UAAUqC,KAAKE,WAAW9C,MAC5CF,YAAaQ,KAAKE,MAAMD,UAAUqC,KAAKE,WAAWhD,YAClDH,KAAM,cACPwC,MAAK,kBAAM/E,EAAEiF,a,SAIpB,WACQG,QAAQ/B,IAAIM,WAAWC,MAAM,wEAC7BV,KAAKE,MAAMD,UAAX,SAA8B4B,MAAK,kBAAM/E,EAAEiF,YAC3CjF,EAAEmF,MAAM9B,IAAI8B,MAAM,kB,GAlDmBgB,KCE5BC,E,gGACjBnD,KAAA,WAEIC,KAAKqB,SAAU,EACfrB,KAAKmD,YAAc,GACnBnD,KAAKoD,KAAO,EACZpD,KAAKqD,W,EAGThB,KAAA,WACI,GAAIrC,KAAKqB,QACL,OAAO,SAAKd,UAAU,2BAA2B+C,IAAiBlC,aAGtE,GAAgC,IAA5BpB,KAAKmD,YAAYI,OAAc,CAC/B,IAAMC,EAAOrD,IAAIM,WAAWC,MAAM,mEAClC,OAAO+C,IAAYrC,UAAU,CAAEoC,SAInC,OACI,SAAKjD,UAAU,mBACX,WAAOA,UAAU,2BACb,eACI,YACI,YAAKJ,IAAIM,WAAWC,MAAM,kEAC1B,YAAKP,IAAIM,WAAWC,MAAM,mEAC1B,YAAKP,IAAIM,WAAWC,MAAM,yEAC1B,YAAKP,IAAIM,WAAWC,MAAM,kEAE1B,eAGR,eAEQV,KAAKmD,YAAYO,KAAI,SAAAzD,GACrB,OAAOmC,EAAoBhB,UAAU,CAAEnB,qB,EAQ/DoD,QAAA,SAAQM,GAMJ,YANkB,IAAdA,OAAQ,GACRA,IACA3D,KAAKqB,SAAU,EACfrB,KAAKmD,YAAc,IAGhBnD,KAAK4D,cAAc/B,KAAK7B,KAAK6D,aAAa3F,KAAK8B,Q,EAI1D4D,YAAA,WACI,OAAOzD,IAAIC,MAAM0D,KAAK,gB,EAI1BD,aAAA,SAAaE,GAMT,MALA,GAAGC,KAAKC,MAAMjE,KAAKmD,YAAaY,GAEhC/D,KAAKqB,SAAU,EAEfvE,EAAEoH,aACKH,G,EAGXI,SAAA,a,EAGAC,SAAA,a,GAvEyCnB,KCHxBoB,E,wFACnBhC,KAAA,WACE,OAEI,SAAK9B,UAAU,aACb,WAAIJ,IAAIM,WAAWC,MAAM,+DAExBS,IAAOC,UAAU,CACEb,UAAW,yBACXsC,KAAM,cACNvB,SAAUnB,IAAIM,WAAWC,MAAM,iEAC/BO,QAAS,kBAAMd,IAAI2C,MAAMC,KAAK,IAAIC,Q,GAXjBC,KCA1BqB,E,wFACnBjC,KAAA,WACE,OACE,SAAK9B,UAAU,mBACb,SAAKA,UAAU,0BAA0B8D,EAAkBjD,aAC3D,SAAKb,UAAU,wBACb,SAAKA,UAAU,aAAa2C,EAAgB9B,gB,GANTmD,KCE9B,aACXpE,IAAIqE,OAAOrB,YAAc,CAAEsB,KAAM,cAAerD,UAAWkD,EAAgBlD,aAE3EjB,IAAIuE,kBAAkB,qBAAuB,kBAAM5H,EAAEmF,MAAM9B,IAAI8B,MAAM,iBAErE0C,iBAAOC,IAAStG,UAAW,SAAS,SAAAuG,GAChCA,EAAMC,IACF,oBACAC,IAAgB3D,UAAU,CACtB4D,KAAM7E,IAAI8B,MAAM,eAChBY,KAAM,kBACNvB,SAAS,sBACT2D,YAAa,qCCf7B9E,IAAI+E,aAAaJ,IAAI,uBAAuB,SAAA3E,GACxCA,EAAIC,MAAM+E,OAAOhC,YAAciC,EAE/BC","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Placeholder'];","module.exports = flarum.core.compat['components/Checkbox'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/string'];","module.exports = flarum.core.compat['components/Switch'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\nimport { getPlainContent } from 'flarum/utils/string';\n\nexport default class Profanity extends mixin(Model, {\n    type: Model.attribute('type'),\n    name: Model.attribute('name'),\n    regex: Model.attribute('regex'),\n    replacement: Model.attribute('replacement'),\n    flag: Model.attribute('flag'),\n    event: Model.attribute('event'),\n    time: Model.attribute('time', Model.transformDate),\n    editTime: Model.attribute('editTime', Model.transformDate),\n\n}) {}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport Switch from 'flarum/components/Switch';\n\n/**\n * The `EditPageModal` component shows a modal dialog which allows the user\n * to create or edit a profanitiesObject.\n */\nexport default class EditPageModal extends Modal {\n  init() {\n    super.init();\n\n    this.profanity = this.props.profanity || app.store.createRecord('profanities');\n\n    this.regex = m.prop(this.profanity.regex() || '');\n    this.name = m.prop(this.profanity.name() || '');\n    this.replacement = m.prop(this.profanity.replacement() || '');\n    this.flag = m.prop(this.profanity.flag() || '');\n    this.event = m.prop(this.profanity.event() || '');\n  }\n\n  className() {\n    return 'EditProfanityModal Modal--medium';\n  }\n\n  title() {\n    return app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form\">\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.name_label')}\n              <input\n                className=\"FormControl\"\n                placeholder=''\n                value={this.name()}\n                oninput={e => {\n                  this.name(e.target.value);\n                }}\n              />\n            </label>\n            {app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.name_help')}\n          </div>\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.regex_label')}\n              <input\n                className=\"FormControl\"\n                placeholder=''\n                value={this.regex()}\n                oninput={e => {\n                  this.regex(e.target.value);\n                }}\n              />\n            </label>\n            {app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.regex_help')}\n          </div>\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.replacement_label')}\n              <input\n                className=\"FormControl\"\n                placeholder=''\n                value={this.replacement()}\n                oninput={e => {\n                  this.replacement(e.target.value);\n                }}\n              />\n            </label>\n            {app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.replacement_help')}\n          </div>\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.flag_label')}</label>\n            <input\n              type=\"checkbox\"\n              checked={this.flag()}\n              onclick={e => {\n                this.flag(e.target.checked);\n              }}\n            />\n            <p>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.flag_help')}</p>\n          </div>\n\n          <div className=\"Form-group\">\n            <label>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.applywhen_label')}\n              <select className=\"FormControl\"\n\n                oninput={m.withAttr('value', this.event)}\n                value={this.event()}\n              >\n                <option value=\"save\">{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.action.save')}</option>\n                <option value=\"load\">{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.action.load')}\n              </option>\n              </select>\n            </label>\n            {app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.applywhen_help')}\n          </div>\n\n          <div className=\"Form-group\">\n            {Button.component({\n              type: 'submit',\n              className: 'Button Button--primary EditProfanityModal-save',\n              loading: this.loading,\n              children: app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.submit_button'),\n            })}\n            {this.profanity.exists ? (\n              <button type=\"button\" className=\"Button EditProfanityModal-delete\"\n                onclick={this.delete.bind(this)}>\n                {app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.delete_button')}\n              </button>\n            ) : (\n                ''\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    this.profanity.save(\n      {\n        name: this.name(),\n        regex: this.regex(),\n        event: this.event(),\n        flag: this.flag(),\n        replacement: this.replacement(),\n        type: 'profanity',\n      },\n      { errorHandler: this.onerror.bind(this) }\n    )\n      .then(this.hide.bind(this))\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  onhide() {\n    m.route(app.route('profanities'));\n  }\n\n  delete() {\n    if (\n      confirm(\n        app.translator.trans('giffgaff-post-decontaminator.admin.edit_profanity.delete_confirmation')\n      )) {\n      this.profanity.delete().then(() => m.redraw());\n      this.hide();\n    }\n  }\n}\n","import Button from 'flarum/components/Button';\nimport Checkbox from 'flarum/components/Checkbox';\nimport Component from 'flarum/Component';\nimport EditProfanityModal from './EditProfanityModal';\n\nexport default class ProfanitiesListItem extends Component {\n\n    view() {\n        const profanity = this.props.profanity;\n        return (\n\n            <tr key={profanity.data.id}>\n                <th>{profanity.data.attributes.name}</th>\n                <th>{profanity.data.attributes.regex}</th>\n                <th>{profanity.data.attributes.replacement}</th>\n                <th>{Checkbox.component({\n                    state: profanity.data.attributes.flag,\n                    onchange: this.updateFlag.bind(this)\n                })}</th>\n                <td className=\"Profanities-actions\">\n\n                    <div className=\"ButtonGroup\">\n                        {Button.component({\n                            className: 'Button Button--Profanities-edit',\n                            icon: 'fas fa-pencil-alt',\n                            onclick: () => app.modal.show(new EditProfanityModal({ profanity })),\n                        })}\n\n                        {Button.component({\n                            className: 'Button Button--danger Button--Profanities-delete',\n                            icon: 'fas fa-times',\n                            onclick: this.delete.bind(this),\n                        })}\n                    </div>\n                </td>\n            </tr>\n\n        );\n    }\n\n    updateFlag() {\n        this.props.profanity.save({\n            name: this.props.profanity.data.attributes.name,\n            flag: (this.props.profanity.data.attributes.flag ? 0 : 1),\n            regex: this.props.profanity.data.attributes.regex,\n            event: this.props.profanity.data.attributes.event,\n            replacement: this.props.profanity.data.attributes.replacement,\n            type: 'profanity'\n        }).then(() => m.redraw());\n    }\n\n\n    delete() {\n        if (confirm(app.translator.trans('flarumite-post-decontaminator.admin.delete_profanity_confirmation'))) {\n            this.props.profanity.delete().then(() => m.redraw());\n            m.route(app.route('profanities'));\n        }\n    }\n}\n","import Component from 'flarum/Component';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Placeholder from 'flarum/components/Placeholder';\n\nimport ProfanitiesListItem from './ProfanitiesListItem';\n\n\nexport default class ProfanitiesList extends Component {\n    init() {\n\n        this.loading = true;\n        this.profanities = [];\n        this.page = 0;\n        this.refresh();\n    }\n\n    view() {\n        if (this.loading) {\n            return <div className=\"ProfanitiesList-loading\">{LoadingIndicator.component()}</div>;\n        }\n\n        if (this.profanities.length === 0) {\n            const text = app.translator.trans('flarumite-post-decontaminator.admin.profanities_list.empty_text');\n            return Placeholder.component({ text });\n        }\n\n\n        return (\n            <div className=\"ProfanitiesList\">\n                <table className=\"ProfanitiesList-results\">\n                    <thead>\n                        <tr>\n                            <th>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.name_label')}</th>\n                            <th>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.regex_label')}</th>\n                            <th>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.replacement_label')}</th>\n                            <th>{app.translator.trans('flarumite-post-decontaminator.admin.edit_profanity.flag_label')}</th>\n                            {/*leave blank for the action buttons*/}\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.profanities.map(profanity => {\n                            return ProfanitiesListItem.component({ profanity });\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    refresh(clear = true) {\n        if (clear) {\n            this.loading = true;\n            this.profanities = [];\n        }\n\n        return this.loadResults().then(this.parseResults.bind(this));\n    }\n\n\n    loadResults() {\n        return app.store.find('profanities');\n    }\n\n\n    parseResults(results) {\n        [].push.apply(this.profanities, results);\n\n        this.loading = false;\n\n        m.lazyRedraw();\n        return results;\n    }\n\n    loadNext() {\n    }\n\n    loadPrev() {\n    }\n}\n","import Component from 'flarum/Component';\nimport EditProfanityModal from \"./EditProfanityModal\";\nimport Button from 'flarum/components/Button';\n\nexport default class ProfanitiesHeader extends Component {\n  view() {\n    return (\n\n        <div className=\"container\">\n          <p>{app.translator.trans('flarumite-post-decontaminator.admin.profanities.about_text')}</p>\n\n          {Button.component({\n                              className: 'Button Button--primary',\n                              icon: 'fas fa-plus',\n                              children: app.translator.trans('flarumite-post-decontaminator.admin.profanities.create_button'),\n                              onclick: () => app.modal.show(new EditProfanityModal()),\n                            })}\n        </div>\n    );\n  }\n}\n","import Page from 'flarum/components/Page';\nimport ProfanitiesList from './ProfanitiesList';\nimport ProfanitiesHeader from \"./ProfanitiesHeader\";\n\nexport default class ProfanitiesPage extends Page {\n  view() {\n    return (\n      <div className=\"ProfanitiesPage\">\n        <div className=\"ProfanitiesPage-header\">{ProfanitiesHeader.component()}</div>\n        <div className=\"ProfanitiesPage-list\">\n          <div className=\"container\">{ProfanitiesList.component()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\n\nimport ProfanitiesPage from './components/ProfanitiesPage';\n\nexport default function() {\n    app.routes.profanities = { path: 'profanities', component: ProfanitiesPage.component() };\n\n    app.extensionSettings['profanity-manager'] = () => m.route(app.route('profanities'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add(\n            'profanity-manager',\n            AdminLinkButton.component({\n                href: app.route('profanities'),\n                icon: 'fas fa-file-alt',\n                children:'Post Decontaminator',\n                description: 'Tool to replace profanities',\n            })\n        );\n    });\n}\n","import ProfanityRow from '../common/models/Profanity';\nimport addPagesPane from './addPagesPane';\n\napp.initializers.add('flarumite/profanity', app => {\n    app.store.models.profanities = ProfanityRow;\n\n    addPagesPane();\n});\n"],"sourceRoot":""}